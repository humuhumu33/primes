[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "factorizer"
version = "1.0.0"
description = "Mathematical factorization using Universal Organizing Resonance (UOR) principles"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Public Domain"}
authors = [
    {name = "UOR Research", email = "research@uor.dev"},
]
keywords = ["factorization", "mathematics", "prime", "fibonacci", "golden-ratio", "spectral-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: Public Domain",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]

[project.scripts]
factorize = "factorizer.cli:main"

[project.urls]
Homepage = "https://github.com/uor-research/factorizer"
Repository = "https://github.com/uor-research/factorizer"
Documentation = "https://factorizer.readthedocs.io/"
"Bug Reports" = "https://github.com/uor-research/factorizer/issues"

[tool.setuptools.packages.find]
exclude = ["test*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["test", "axiom1/test", "axiom2/test", "axiom3/test", "axiom4/test", "axiom5/test"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true